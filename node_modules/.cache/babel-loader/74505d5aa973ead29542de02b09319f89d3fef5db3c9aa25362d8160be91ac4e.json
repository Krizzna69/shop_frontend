{"ast":null,"code":"/**\r\n * Synchronizes a user's cart with the backend\r\n * @param {Array} cartItems - The cart items to sync\r\n * @param {string} token - The user's auth token\r\n * @returns {Promise} - The synced cart from the backend\r\n */\nexport const syncCartWithBackend = async (cartItems, token) => {\n  try {\n    // Clear the current cart on the backend\n    await fetch('http://localhost:5000/api/cart', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': token\n      }\n    });\n\n    // Add each item to the cart\n    for (const item of cartItems) {\n      await fetch('http://localhost:5000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-auth-token': token\n        },\n        body: JSON.stringify({\n          productId: item._id,\n          quantity: item.quantity\n        })\n      });\n    }\n\n    // Get the updated cart\n    const response = await fetch('http://localhost:5000/api/cart', {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to sync cart with backend');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error syncing cart with backend:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["syncCartWithBackend","cartItems","token","fetch","method","headers","item","body","JSON","stringify","productId","_id","quantity","response","ok","Error","data","json","error","console"],"sources":["C:/Users/jaswa/OneDrive/Projects/vijayalakshmi/grocery-shop-frontend/src/utils/cartUtils.js"],"sourcesContent":["/**\r\n * Synchronizes a user's cart with the backend\r\n * @param {Array} cartItems - The cart items to sync\r\n * @param {string} token - The user's auth token\r\n * @returns {Promise} - The synced cart from the backend\r\n */\r\nexport const syncCartWithBackend = async (cartItems, token) => {\r\n    try {\r\n      // Clear the current cart on the backend\r\n      await fetch('http://localhost:5000/api/cart', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n      \r\n      // Add each item to the cart\r\n      for (const item of cartItems) {\r\n        await fetch('http://localhost:5000/api/cart', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': token\r\n          },\r\n          body: JSON.stringify({\r\n            productId: item._id,\r\n            quantity: item.quantity\r\n          })\r\n        });\r\n      }\r\n      \r\n      // Get the updated cart\r\n      const response = await fetch('http://localhost:5000/api/cart', {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to sync cart with backend');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error syncing cart with backend:', error);\r\n      throw error;\r\n    }\r\n  };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,mBAAmB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,KAAK,KAAK;EAC3D,IAAI;IACF;IACA,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC5CC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,cAAc,EAAEH;MAClB;IACF,CAAC,CAAC;;IAEF;IACA,KAAK,MAAMI,IAAI,IAAIL,SAAS,EAAE;MAC5B,MAAME,KAAK,CAAC,gCAAgC,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,cAAc,EAAEH;QAClB,CAAC;QACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAEJ,IAAI,CAACK,GAAG;UACnBC,QAAQ,EAAEN,IAAI,CAACM;QACjB,CAAC;MACH,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,gCAAgC,EAAE;MAC7DE,OAAO,EAAE;QACP,cAAc,EAAEH;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACW,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}