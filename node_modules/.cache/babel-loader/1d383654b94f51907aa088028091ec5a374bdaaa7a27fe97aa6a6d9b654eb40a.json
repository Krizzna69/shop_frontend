{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaswa\\\\OneDrive\\\\Projects\\\\vijayalakshmi\\\\grocery-shop-frontend\\\\src\\\\components\\\\ManageOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/ManageOrders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageOrders = () => {\n  _s();\n  var _selectedOrder$shippi, _selectedOrder$shippi2, _selectedOrder$shippi3, _selectedOrder$shippi4, _selectedOrder$shippi5, _selectedOrder$shippi6;\n  const {\n    token\n  } = useContext(AuthContext);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [currentDateTime] = useState('2025-03-27 04:57:48');\n  const [currentUser] = useState('Krizzna69');\n  useEffect(() => {\n    fetchOrders();\n  }, [token]);\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n\n      // Try to fetch from API first (if implemented)\n      try {\n        const response = await fetch('http://localhost:5000/api/orders/admin', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setOrders(data);\n          setLoading(false);\n          return;\n        }\n      } catch (err) {\n        console.log(\"API not available, using localStorage\");\n      }\n\n      // Fallback to localStorage if API fails - get ALL orders\n      const allOrders = localStorage.getItem('allOrders');\n      if (allOrders) {\n        try {\n          const parsedOrders = JSON.parse(allOrders);\n          if (Array.isArray(parsedOrders)) {\n            setOrders(parsedOrders);\n          } else {\n            // If it's not an array, check if there's a single order\n            const singleOrder = localStorage.getItem('lastOrder');\n            if (singleOrder) {\n              try {\n                const parsedOrder = JSON.parse(singleOrder);\n                setOrders([parsedOrder]);\n              } catch (err) {\n                console.error(\"Error parsing single order\", err);\n                setOrders([]);\n              }\n            } else {\n              setOrders([]);\n            }\n          }\n        } catch (err) {\n          console.error(\"Error parsing all orders\", err);\n          setOrders([]);\n        }\n      } else {\n        // If there's no allOrders array, try to get the single last order\n        const singleOrder = localStorage.getItem('lastOrder');\n        if (singleOrder) {\n          try {\n            const parsedOrder = JSON.parse(singleOrder);\n            setOrders([parsedOrder]);\n          } catch (err) {\n            console.error(\"Error parsing single order\", err);\n            setOrders([]);\n          }\n        } else {\n          setOrders([]);\n        }\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to fetch orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStatusChange = async (orderId, newStatus) => {\n    try {\n      // Try API first (if implemented)\n      let apiSuccess = false;\n      try {\n        const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token\n          },\n          body: JSON.stringify({\n            status: newStatus\n          })\n        });\n        if (response.ok) {\n          apiSuccess = true;\n        }\n      } catch (err) {\n        console.log(\"API not available, updating in localStorage\");\n      }\n\n      // Update orders in state\n      setOrders(orders.map(order => order._id === orderId ? {\n        ...order,\n        status: newStatus\n      } : order));\n\n      // If using localStorage, update both in lastOrder and allOrders\n      if (!apiSuccess) {\n        // Update single order if it matches\n        const singleOrder = localStorage.getItem('lastOrder');\n        if (singleOrder) {\n          try {\n            const parsedOrder = JSON.parse(singleOrder);\n            if (parsedOrder._id === orderId) {\n              parsedOrder.status = newStatus;\n              localStorage.setItem('lastOrder', JSON.stringify(parsedOrder));\n            }\n          } catch (err) {\n            console.error(\"Error updating single order in localStorage\", err);\n          }\n        }\n\n        // Update in allOrders array\n        const allOrders = localStorage.getItem('allOrders');\n        if (allOrders) {\n          try {\n            const parsedOrders = JSON.parse(allOrders);\n            if (Array.isArray(parsedOrders)) {\n              const updatedOrders = parsedOrders.map(order => order._id === orderId ? {\n                ...order,\n                status: newStatus\n              } : order);\n              localStorage.setItem('allOrders', JSON.stringify(updatedOrders));\n            }\n          } catch (err) {\n            console.error(\"Error updating order in allOrders\", err);\n          }\n        }\n      }\n\n      // If selected order is open, update it too\n      if (selectedOrder && selectedOrder._id === orderId) {\n        setSelectedOrder({\n          ...selectedOrder,\n          status: newStatus\n        });\n      }\n      setSuccessMessage(`Order status updated to ${newStatus}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      setError(err.message || 'Failed to update order status');\n    }\n  };\n  const viewOrderDetails = order => {\n    setSelectedOrder(order);\n  };\n  const closeOrderDetails = () => {\n    setSelectedOrder(null);\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Administrator: \", currentUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 26\n    }, this), selectedOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closeOrderDetails,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Order ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 16\n          }, this), \" \", selectedOrder._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 16\n          }, this), \" \", formatDate(selectedOrder.createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 16\n          }, this), \" \", ((_selectedOrder$shippi = selectedOrder.shippingAddress) === null || _selectedOrder$shippi === void 0 ? void 0 : _selectedOrder$shippi.fullName) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${selectedOrder.status.toLowerCase()}`,\n            children: selectedOrder.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }, this), \" $\", selectedOrder.totalAmount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipping-address\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_selectedOrder$shippi2 = selectedOrder.shippingAddress) === null || _selectedOrder$shippi2 === void 0 ? void 0 : _selectedOrder$shippi2.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_selectedOrder$shippi3 = selectedOrder.shippingAddress) === null || _selectedOrder$shippi3 === void 0 ? void 0 : _selectedOrder$shippi3.city, \", \", (_selectedOrder$shippi4 = selectedOrder.shippingAddress) === null || _selectedOrder$shippi4 === void 0 ? void 0 : _selectedOrder$shippi4.state, \" \", (_selectedOrder$shippi5 = selectedOrder.shippingAddress) === null || _selectedOrder$shippi5 === void 0 ? void 0 : _selectedOrder$shippi5.zipCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), ((_selectedOrder$shippi6 = selectedOrder.shippingAddress) === null || _selectedOrder$shippi6 === void 0 ? void 0 : _selectedOrder$shippi6.phoneNumber) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", selectedOrder.shippingAddress.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-products-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedOrder.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", item.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", (item.price * item.quantity).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Order Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Processing'),\n            disabled: selectedOrder.status === 'Processing',\n            children: \"Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Shipped'),\n            disabled: selectedOrder.status === 'Shipped',\n            children: \"Shipped\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Delivered'),\n            disabled: selectedOrder.status === 'Delivered',\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Cancelled'),\n            disabled: selectedOrder.status === 'Cancelled',\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"orders-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"no-orders\",\n              children: \"No orders available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this) : orders.map(order => {\n            var _order$shippingAddres;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-id\",\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_order$shippingAddres = order.shippingAddress) === null || _order$shippingAddres === void 0 ? void 0 : _order$shippingAddres.fullName) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(order.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-total\",\n                children: [\"$\", order.totalAmount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${order.status.toLowerCase()}`,\n                  children: order.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-btn\",\n                  onClick: () => viewOrderDetails(order),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageOrders, \"97LHVZXV5Fq10KOPycbLGfvxC9k=\");\n_c = ManageOrders;\nexport default ManageOrders;\nvar _c;\n$RefreshReg$(_c, \"ManageOrders\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","ManageOrders","_s","_selectedOrder$shippi","_selectedOrder$shippi2","_selectedOrder$shippi3","_selectedOrder$shippi4","_selectedOrder$shippi5","_selectedOrder$shippi6","token","orders","setOrders","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedOrder","setSelectedOrder","currentDateTime","currentUser","fetchOrders","response","fetch","headers","ok","data","json","err","console","log","allOrders","localStorage","getItem","parsedOrders","JSON","parse","Array","isArray","singleOrder","parsedOrder","message","handleStatusChange","orderId","newStatus","apiSuccess","method","body","stringify","status","map","order","_id","setItem","updatedOrders","setTimeout","viewOrderDetails","closeOrderDetails","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","createdAt","shippingAddress","fullName","toLowerCase","totalAmount","toFixed","address","city","state","zipCode","phoneNumber","items","item","index","product","name","price","quantity","disabled","length","colSpan","_order$shippingAddres","_c","$RefreshReg$"],"sources":["C:/Users/jaswa/OneDrive/Projects/vijayalakshmi/grocery-shop-frontend/src/components/ManageOrders.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/ManageOrders.css';\r\n\r\nconst ManageOrders = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [currentDateTime] = useState('2025-03-27 04:57:48');\r\n  const [currentUser] = useState('Krizzna69');\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [token]);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Try to fetch from API first (if implemented)\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/orders/admin', {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOrders(data);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        console.log(\"API not available, using localStorage\");\r\n      }\r\n      \r\n      // Fallback to localStorage if API fails - get ALL orders\r\n      const allOrders = localStorage.getItem('allOrders');\r\n      if (allOrders) {\r\n        try {\r\n          const parsedOrders = JSON.parse(allOrders);\r\n          if (Array.isArray(parsedOrders)) {\r\n            setOrders(parsedOrders);\r\n          } else {\r\n            // If it's not an array, check if there's a single order\r\n            const singleOrder = localStorage.getItem('lastOrder');\r\n            if (singleOrder) {\r\n              try {\r\n                const parsedOrder = JSON.parse(singleOrder);\r\n                setOrders([parsedOrder]);\r\n              } catch (err) {\r\n                console.error(\"Error parsing single order\", err);\r\n                setOrders([]);\r\n              }\r\n            } else {\r\n              setOrders([]);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error parsing all orders\", err);\r\n          setOrders([]);\r\n        }\r\n      } else {\r\n        // If there's no allOrders array, try to get the single last order\r\n        const singleOrder = localStorage.getItem('lastOrder');\r\n        if (singleOrder) {\r\n          try {\r\n            const parsedOrder = JSON.parse(singleOrder);\r\n            setOrders([parsedOrder]);\r\n          } catch (err) {\r\n            console.error(\"Error parsing single order\", err);\r\n            setOrders([]);\r\n          }\r\n        } else {\r\n          setOrders([]);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch orders');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      // Try API first (if implemented)\r\n      let apiSuccess = false;\r\n      \r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': token\r\n          },\r\n          body: JSON.stringify({ status: newStatus })\r\n        });\r\n\r\n        if (response.ok) {\r\n          apiSuccess = true;\r\n        }\r\n      } catch (err) {\r\n        console.log(\"API not available, updating in localStorage\");\r\n      }\r\n      \r\n      // Update orders in state\r\n      setOrders(orders.map(order => \r\n        order._id === orderId ? { ...order, status: newStatus } : order\r\n      ));\r\n      \r\n      // If using localStorage, update both in lastOrder and allOrders\r\n      if (!apiSuccess) {\r\n        // Update single order if it matches\r\n        const singleOrder = localStorage.getItem('lastOrder');\r\n        if (singleOrder) {\r\n          try {\r\n            const parsedOrder = JSON.parse(singleOrder);\r\n            if (parsedOrder._id === orderId) {\r\n              parsedOrder.status = newStatus;\r\n              localStorage.setItem('lastOrder', JSON.stringify(parsedOrder));\r\n            }\r\n          } catch (err) {\r\n            console.error(\"Error updating single order in localStorage\", err);\r\n          }\r\n        }\r\n        \r\n        // Update in allOrders array\r\n        const allOrders = localStorage.getItem('allOrders');\r\n        if (allOrders) {\r\n          try {\r\n            const parsedOrders = JSON.parse(allOrders);\r\n            if (Array.isArray(parsedOrders)) {\r\n              const updatedOrders = parsedOrders.map(order => \r\n                order._id === orderId ? { ...order, status: newStatus } : order\r\n              );\r\n              localStorage.setItem('allOrders', JSON.stringify(updatedOrders));\r\n            }\r\n          } catch (err) {\r\n            console.error(\"Error updating order in allOrders\", err);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If selected order is open, update it too\r\n      if (selectedOrder && selectedOrder._id === orderId) {\r\n        setSelectedOrder({ ...selectedOrder, status: newStatus });\r\n      }\r\n      \r\n      setSuccessMessage(`Order status updated to ${newStatus}`);\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const viewOrderDetails = (order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  const closeOrderDetails = () => {\r\n    setSelectedOrder(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading orders...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"manage-orders-container\">\r\n      <div className=\"orders-header\">\r\n        <h2>Manage Orders</h2>\r\n        <div className=\"admin-info\">\r\n          <span>{currentDateTime}</span>\r\n          <span>Administrator: {currentUser}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      \r\n      {selectedOrder ? (\r\n        <div className=\"order-details\">\r\n          <div className=\"order-details-header\">\r\n            <h3>Order Details</h3>\r\n            <button className=\"close-btn\" onClick={closeOrderDetails}>×</button>\r\n          </div>\r\n          \r\n          <div className=\"order-info\">\r\n            <p><strong>Order ID:</strong> {selectedOrder._id}</p>\r\n            <p><strong>Date:</strong> {formatDate(selectedOrder.createdAt)}</p>\r\n            <p><strong>Customer:</strong> {selectedOrder.shippingAddress?.fullName || 'N/A'}</p>\r\n            <p><strong>Status:</strong> <span className={`status-${selectedOrder.status.toLowerCase()}`}>{selectedOrder.status}</span></p>\r\n            <p><strong>Total Amount:</strong> ${selectedOrder.totalAmount.toFixed(2)}</p>\r\n          </div>\r\n\r\n          <div className=\"shipping-address\">\r\n            <h4>Shipping Address</h4>\r\n            <p>{selectedOrder.shippingAddress?.address}</p>\r\n            <p>{selectedOrder.shippingAddress?.city}, {selectedOrder.shippingAddress?.state} {selectedOrder.shippingAddress?.zipCode}</p>\r\n            {selectedOrder.shippingAddress?.phoneNumber && (\r\n              <p>Phone: {selectedOrder.shippingAddress.phoneNumber}</p>\r\n            )}\r\n          </div>\r\n          \r\n          <h4>Products</h4>\r\n          <table className=\"order-products-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Price</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {selectedOrder.items.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.product.name}</td>\r\n                  <td>${item.price.toFixed(2)}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>${(item.price * item.quantity).toFixed(2)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          \r\n          <div className=\"update-status\">\r\n            <h4>Update Order Status</h4>\r\n            <div className=\"status-buttons\">\r\n              <button \r\n                className={`status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Processing')}\r\n                disabled={selectedOrder.status === 'Processing'}\r\n              >\r\n                Processing\r\n              </button>\r\n              <button \r\n                className={`status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Shipped')}\r\n                disabled={selectedOrder.status === 'Shipped'}\r\n              >\r\n                Shipped\r\n              </button>\r\n              <button \r\n                className={`status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Delivered')}\r\n                disabled={selectedOrder.status === 'Delivered'}\r\n              >\r\n                Delivered\r\n              </button>\r\n              <button \r\n                className={`status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Cancelled')}\r\n                disabled={selectedOrder.status === 'Cancelled'}\r\n              >\r\n                Cancelled\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders-table-container\">\r\n          <table className=\"orders-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"no-orders\">No orders available</td>\r\n                </tr>\r\n              ) : (\r\n                orders.map(order => (\r\n                  <tr key={order._id}>\r\n                    <td className=\"order-id\">{order._id}</td>\r\n                    <td>{order.shippingAddress?.fullName || 'N/A'}</td>\r\n                    <td>{formatDate(order.createdAt)}</td>\r\n                    <td className=\"order-total\">${order.totalAmount.toFixed(2)}</td>\r\n                    <td className=\"order-status\">\r\n                      <span className={`status-badge ${order.status.toLowerCase()}`}>\r\n                        {order.status}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"actions-cell\">\r\n                      <button \r\n                        className=\"view-btn\"\r\n                        onClick={() => viewOrderDetails(order)}\r\n                      >\r\n                        View Details\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}