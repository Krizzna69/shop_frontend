{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaswa\\\\OneDrive\\\\Projects\\\\vijayalakshmi\\\\grocery-shop-frontend\\\\src\\\\components\\\\ManageOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/ManageOrders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageOrders = () => {\n  _s();\n  var _selectedOrder$shippi;\n  const {\n    token\n  } = useContext(AuthContext);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [currentDateTime] = useState('2025-03-27 05:23:01');\n  const [currentUser] = useState('Krizzna69');\n  useEffect(() => {\n    fetchOrders();\n  }, [token]);\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n\n      // Try to fetch from API first (if implemented)\n      try {\n        const response = await fetch('http://localhost:5000/api/orders/admin', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setOrders(data);\n          setLoading(false);\n          return;\n        }\n      } catch (err) {\n        console.log(\"API not available, using localStorage\");\n      }\n\n      // Fallback to localStorage if API fails - get ALL orders\n      const allOrders = localStorage.getItem('allOrders');\n      if (allOrders) {\n        try {\n          const parsedOrders = JSON.parse(allOrders);\n          if (Array.isArray(parsedOrders)) {\n            setOrders(parsedOrders);\n          } else {\n            // If it's not an array, check if there's a single order\n            const singleOrder = localStorage.getItem('lastOrder');\n            if (singleOrder) {\n              try {\n                const parsedOrder = JSON.parse(singleOrder);\n                setOrders([parsedOrder]);\n              } catch (err) {\n                console.error(\"Error parsing single order\", err);\n                setOrders([]);\n              }\n            } else {\n              setOrders([]);\n            }\n          }\n        } catch (err) {\n          console.error(\"Error parsing all orders\", err);\n          setOrders([]);\n        }\n      } else {\n        // If there's no allOrders array, try to get the single last order\n        const singleOrder = localStorage.getItem('lastOrder');\n        if (singleOrder) {\n          try {\n            const parsedOrder = JSON.parse(singleOrder);\n            setOrders([parsedOrder]);\n          } catch (err) {\n            console.error(\"Error parsing single order\", err);\n            setOrders([]);\n          }\n        } else {\n          setOrders([]);\n        }\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to fetch orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStatusChange = async (orderId, newStatus) => {\n    try {\n      // Try API first (if implemented)\n      let apiSuccess = false;\n      try {\n        const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token\n          },\n          body: JSON.stringify({\n            status: newStatus\n          })\n        });\n        if (response.ok) {\n          apiSuccess = true;\n        }\n      } catch (err) {\n        console.log(\"API not available, updating in localStorage\");\n      }\n\n      // Update orders in state\n      setOrders(orders.map(order => order._id === orderId ? {\n        ...order,\n        status: newStatus\n      } : order));\n\n      // If using localStorage, update both in lastOrder and allOrders\n      if (!apiSuccess) {\n        // Update single order if it matches\n        const singleOrder = localStorage.getItem('lastOrder');\n        if (singleOrder) {\n          try {\n            const parsedOrder = JSON.parse(singleOrder);\n            if (parsedOrder._id === orderId) {\n              parsedOrder.status = newStatus;\n              localStorage.setItem('lastOrder', JSON.stringify(parsedOrder));\n            }\n          } catch (err) {\n            console.error(\"Error updating single order in localStorage\", err);\n          }\n        }\n\n        // Update in allOrders array\n        const allOrders = localStorage.getItem('allOrders');\n        if (allOrders) {\n          try {\n            const parsedOrders = JSON.parse(allOrders);\n            if (Array.isArray(parsedOrders)) {\n              const updatedOrders = parsedOrders.map(order => order._id === orderId ? {\n                ...order,\n                status: newStatus\n              } : order);\n              localStorage.setItem('allOrders', JSON.stringify(updatedOrders));\n            }\n          } catch (err) {\n            console.error(\"Error updating order in allOrders\", err);\n          }\n        }\n      }\n\n      // If selected order is open, update it too\n      if (selectedOrder && selectedOrder._id === orderId) {\n        setSelectedOrder({\n          ...selectedOrder,\n          status: newStatus\n        });\n      }\n      setSuccessMessage(`Order status updated to ${newStatus}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      setError(err.message || 'Failed to update order status');\n    }\n  };\n  const viewOrderDetails = order => {\n    setSelectedOrder(order);\n  };\n  const closeOrderDetails = () => {\n    setSelectedOrder(null);\n  };\n  const formatDate = dateString => {\n    try {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    } catch (err) {\n      return 'Invalid date';\n    }\n  };\n  const formatPrice = price => {\n    // Add null check before calling toFixed\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : '$0.00';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Administrator: \", currentUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 26\n    }, this), selectedOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closeOrderDetails,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Order ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }, this), \" \", selectedOrder._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 16\n          }, this), \" \", selectedOrder.createdAt ? formatDate(selectedOrder.createdAt) : 'Unknown date']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 16\n          }, this), \" \", ((_selectedOrder$shippi = selectedOrder.shippingAddress) === null || _selectedOrder$shippi === void 0 ? void 0 : _selectedOrder$shippi.fullName) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${(selectedOrder.status || '').toLowerCase()}`,\n            children: selectedOrder.status || 'Unknown'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 16\n          }, this), \" \", formatPrice(selectedOrder.totalAmount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), selectedOrder.shippingAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipping-address\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedOrder.shippingAddress.address || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [selectedOrder.shippingAddress.city || 'N/A', \",\", selectedOrder.shippingAddress.state || 'N/A', selectedOrder.shippingAddress.zipCode || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), selectedOrder.shippingAddress.phoneNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", selectedOrder.shippingAddress.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-products-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedOrder.items.map((item, index) => {\n            if (!item || !item.product) return null;\n            const itemPrice = typeof item.price === 'number' ? item.price : 0;\n            const itemQuantity = typeof item.quantity === 'number' ? item.quantity : 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.product.name || 'Unknown Product'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPrice(itemPrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: itemQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPrice(itemPrice * itemQuantity)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No product information available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Order Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Processing'),\n            disabled: selectedOrder.status === 'Processing',\n            children: \"Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Shipped'),\n            disabled: selectedOrder.status === 'Shipped',\n            children: \"Shipped\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Delivered'),\n            disabled: selectedOrder.status === 'Delivered',\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Cancelled'),\n            disabled: selectedOrder.status === 'Cancelled',\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"orders-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"no-orders\",\n              children: \"No orders available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this) : orders.map(order => {\n            var _order$shippingAddres;\n            if (!order || !order._id) return null;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-id\",\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_order$shippingAddres = order.shippingAddress) === null || _order$shippingAddres === void 0 ? void 0 : _order$shippingAddres.fullName) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdAt ? formatDate(order.createdAt) : 'Unknown date'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-total\",\n                children: formatPrice(order.totalAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${(order.status || '').toLowerCase()}`,\n                  children: order.status || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-btn\",\n                  onClick: () => viewOrderDetails(order),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageOrders, \"u+ceBCOQxBxU8YfcBSF4CllWtGQ=\");\n_c = ManageOrders;\nexport default ManageOrders;\nvar _c;\n$RefreshReg$(_c, \"ManageOrders\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","ManageOrders","_s","_selectedOrder$shippi","token","orders","setOrders","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedOrder","setSelectedOrder","currentDateTime","currentUser","fetchOrders","response","fetch","headers","ok","data","json","err","console","log","allOrders","localStorage","getItem","parsedOrders","JSON","parse","Array","isArray","singleOrder","parsedOrder","message","handleStatusChange","orderId","newStatus","apiSuccess","method","body","stringify","status","map","order","_id","setItem","updatedOrders","setTimeout","viewOrderDetails","closeOrderDetails","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","formatPrice","price","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","createdAt","shippingAddress","fullName","toLowerCase","totalAmount","address","city","state","zipCode","phoneNumber","items","length","item","index","product","itemPrice","itemQuantity","quantity","name","disabled","colSpan","_order$shippingAddres","_c","$RefreshReg$"],"sources":["C:/Users/jaswa/OneDrive/Projects/vijayalakshmi/grocery-shop-frontend/src/components/ManageOrders.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/ManageOrders.css';\r\n\r\nconst ManageOrders = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [currentDateTime] = useState('2025-03-27 05:23:01');\r\n  const [currentUser] = useState('Krizzna69');\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, [token]);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Try to fetch from API first (if implemented)\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/orders/admin', {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOrders(data);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        console.log(\"API not available, using localStorage\");\r\n      }\r\n      \r\n      // Fallback to localStorage if API fails - get ALL orders\r\n      const allOrders = localStorage.getItem('allOrders');\r\n      if (allOrders) {\r\n        try {\r\n          const parsedOrders = JSON.parse(allOrders);\r\n          if (Array.isArray(parsedOrders)) {\r\n            setOrders(parsedOrders);\r\n          } else {\r\n            // If it's not an array, check if there's a single order\r\n            const singleOrder = localStorage.getItem('lastOrder');\r\n            if (singleOrder) {\r\n              try {\r\n                const parsedOrder = JSON.parse(singleOrder);\r\n                setOrders([parsedOrder]);\r\n              } catch (err) {\r\n                console.error(\"Error parsing single order\", err);\r\n                setOrders([]);\r\n              }\r\n            } else {\r\n              setOrders([]);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error parsing all orders\", err);\r\n          setOrders([]);\r\n        }\r\n      } else {\r\n        // If there's no allOrders array, try to get the single last order\r\n        const singleOrder = localStorage.getItem('lastOrder');\r\n        if (singleOrder) {\r\n          try {\r\n            const parsedOrder = JSON.parse(singleOrder);\r\n            setOrders([parsedOrder]);\r\n          } catch (err) {\r\n            console.error(\"Error parsing single order\", err);\r\n            setOrders([]);\r\n          }\r\n        } else {\r\n          setOrders([]);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch orders');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      // Try API first (if implemented)\r\n      let apiSuccess = false;\r\n      \r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': token\r\n          },\r\n          body: JSON.stringify({ status: newStatus })\r\n        });\r\n\r\n        if (response.ok) {\r\n          apiSuccess = true;\r\n        }\r\n      } catch (err) {\r\n        console.log(\"API not available, updating in localStorage\");\r\n      }\r\n      \r\n      // Update orders in state\r\n      setOrders(orders.map(order => \r\n        order._id === orderId ? { ...order, status: newStatus } : order\r\n      ));\r\n      \r\n      // If using localStorage, update both in lastOrder and allOrders\r\n      if (!apiSuccess) {\r\n        // Update single order if it matches\r\n        const singleOrder = localStorage.getItem('lastOrder');\r\n        if (singleOrder) {\r\n          try {\r\n            const parsedOrder = JSON.parse(singleOrder);\r\n            if (parsedOrder._id === orderId) {\r\n              parsedOrder.status = newStatus;\r\n              localStorage.setItem('lastOrder', JSON.stringify(parsedOrder));\r\n            }\r\n          } catch (err) {\r\n            console.error(\"Error updating single order in localStorage\", err);\r\n          }\r\n        }\r\n        \r\n        // Update in allOrders array\r\n        const allOrders = localStorage.getItem('allOrders');\r\n        if (allOrders) {\r\n          try {\r\n            const parsedOrders = JSON.parse(allOrders);\r\n            if (Array.isArray(parsedOrders)) {\r\n              const updatedOrders = parsedOrders.map(order => \r\n                order._id === orderId ? { ...order, status: newStatus } : order\r\n              );\r\n              localStorage.setItem('allOrders', JSON.stringify(updatedOrders));\r\n            }\r\n          } catch (err) {\r\n            console.error(\"Error updating order in allOrders\", err);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If selected order is open, update it too\r\n      if (selectedOrder && selectedOrder._id === orderId) {\r\n        setSelectedOrder({ ...selectedOrder, status: newStatus });\r\n      }\r\n      \r\n      setSuccessMessage(`Order status updated to ${newStatus}`);\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const viewOrderDetails = (order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  const closeOrderDetails = () => {\r\n    setSelectedOrder(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n      return new Date(dateString).toLocaleDateString(undefined, options);\r\n    } catch (err) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  const formatPrice = (price) => {\r\n    // Add null check before calling toFixed\r\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : '$0.00';\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading orders...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"manage-orders-container\">\r\n      <div className=\"orders-header\">\r\n        <h2>Manage Orders</h2>\r\n        <div className=\"admin-info\">\r\n          <span>{currentDateTime}</span>\r\n          <span>Administrator: {currentUser}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      \r\n      {selectedOrder ? (\r\n        <div className=\"order-details\">\r\n          <div className=\"order-details-header\">\r\n            <h3>Order Details</h3>\r\n            <button className=\"close-btn\" onClick={closeOrderDetails}>×</button>\r\n          </div>\r\n          \r\n          <div className=\"order-info\">\r\n            <p><strong>Order ID:</strong> {selectedOrder._id}</p>\r\n            <p><strong>Date:</strong> {selectedOrder.createdAt ? formatDate(selectedOrder.createdAt) : 'Unknown date'}</p>\r\n            <p><strong>Customer:</strong> {selectedOrder.shippingAddress?.fullName || 'N/A'}</p>\r\n            <p><strong>Status:</strong> <span className={`status-${(selectedOrder.status || '').toLowerCase()}`}>{selectedOrder.status || 'Unknown'}</span></p>\r\n            <p><strong>Total Amount:</strong> {formatPrice(selectedOrder.totalAmount)}</p>\r\n          </div>\r\n\r\n          {selectedOrder.shippingAddress && (\r\n            <div className=\"shipping-address\">\r\n              <h4>Shipping Address</h4>\r\n              <p>{selectedOrder.shippingAddress.address || 'N/A'}</p>\r\n              <p>\r\n                {selectedOrder.shippingAddress.city || 'N/A'}, \r\n                {selectedOrder.shippingAddress.state || 'N/A'} \r\n                {selectedOrder.shippingAddress.zipCode || 'N/A'}\r\n              </p>\r\n              {selectedOrder.shippingAddress.phoneNumber && (\r\n                <p>Phone: {selectedOrder.shippingAddress.phoneNumber}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <h4>Products</h4>\r\n          {Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? (\r\n            <table className=\"order-products-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Subtotal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {selectedOrder.items.map((item, index) => {\r\n                  if (!item || !item.product) return null;\r\n                  \r\n                  const itemPrice = typeof item.price === 'number' ? item.price : 0;\r\n                  const itemQuantity = typeof item.quantity === 'number' ? item.quantity : 0;\r\n                  \r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.product.name || 'Unknown Product'}</td>\r\n                      <td>{formatPrice(itemPrice)}</td>\r\n                      <td>{itemQuantity}</td>\r\n                      <td>{formatPrice(itemPrice * itemQuantity)}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No product information available</p>\r\n          )}\r\n          \r\n          <div className=\"update-status\">\r\n            <h4>Update Order Status</h4>\r\n            <div className=\"status-buttons\">\r\n              <button \r\n                className={`status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Processing')}\r\n                disabled={selectedOrder.status === 'Processing'}\r\n              >\r\n                Processing\r\n              </button>\r\n              <button \r\n                className={`status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Shipped')}\r\n                disabled={selectedOrder.status === 'Shipped'}\r\n              >\r\n                Shipped\r\n              </button>\r\n              <button \r\n                className={`status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Delivered')}\r\n                disabled={selectedOrder.status === 'Delivered'}\r\n              >\r\n                Delivered\r\n              </button>\r\n              <button \r\n                className={`status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Cancelled')}\r\n                disabled={selectedOrder.status === 'Cancelled'}\r\n              >\r\n                Cancelled\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders-table-container\">\r\n          <table className=\"orders-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"no-orders\">No orders available</td>\r\n                </tr>\r\n              ) : (\r\n                orders.map(order => {\r\n                  if (!order || !order._id) return null;\r\n                  \r\n                  return (\r\n                    <tr key={order._id}>\r\n                      <td className=\"order-id\">{order._id}</td>\r\n                      <td>{order.shippingAddress?.fullName || 'N/A'}</td>\r\n                      <td>{order.createdAt ? formatDate(order.createdAt) : 'Unknown date'}</td>\r\n                      <td className=\"order-total\">{formatPrice(order.totalAmount)}</td>\r\n                      <td className=\"order-status\">\r\n                        <span className={`status-badge ${(order.status || '').toLowerCase()}`}>\r\n                          {order.status || 'Unknown'}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"actions-cell\">\r\n                        <button \r\n                          className=\"view-btn\"\r\n                          onClick={() => viewOrderDetails(order)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}