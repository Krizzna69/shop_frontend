{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaswa\\\\OneDrive\\\\Projects\\\\vijayalakshmi\\\\grocery-shop-frontend\\\\src\\\\components\\\\ManageOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/ManageOrders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageOrders = () => {\n  _s();\n  var _selectedOrder$shippi;\n  const {\n    token\n  } = useContext(AuthContext);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [currentDateTime] = useState('2025-03-27 05:50:54');\n  const [currentUser] = useState('Krizzna69');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  useEffect(() => {\n    fetchAllOrders();\n  }, [token]);\n  const fetchAllOrders = async () => {\n    try {\n      setLoading(true);\n\n      // Try to fetch from API first (if implemented)\n      try {\n        const response = await fetch('http://localhost:5000/api/orders/admin', {\n          headers: {\n            'x-auth-token': token\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setOrders(data);\n          setLoading(false);\n          return;\n        }\n      } catch (err) {\n        console.log(\"API not available, using localStorage\");\n      }\n\n      // Collect all orders from all users in localStorage\n      let allOrders = [];\n\n      // First try allOrders key (for backward compatibility)\n      try {\n        const allOrdersStr = localStorage.getItem('allOrders');\n        if (allOrdersStr) {\n          const parsedOrders = JSON.parse(allOrdersStr);\n          if (Array.isArray(parsedOrders)) {\n            allOrders = parsedOrders;\n          }\n        }\n      } catch (err) {\n        console.error(\"Error parsing allOrders:\", err);\n      }\n\n      // If no orders found or we want to be thorough, scan all localStorage keys\n      // for user-specific order collections\n      if (allOrders.length === 0) {\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          if (key && key.startsWith('orders_')) {\n            try {\n              const userOrdersStr = localStorage.getItem(key);\n              if (userOrdersStr) {\n                const userOrders = JSON.parse(userOrdersStr);\n                if (Array.isArray(userOrders)) {\n                  allOrders = [...allOrders, ...userOrders];\n                }\n              }\n            } catch (err) {\n              console.error(`Error parsing orders for key ${key}:`, err);\n            }\n          }\n        }\n      }\n\n      // For a clean display, sort by date (most recent first)\n      allOrders.sort((a, b) => {\n        return new Date(b.createdAt || 0) - new Date(a.createdAt || 0);\n      });\n      setOrders(allOrders);\n    } catch (err) {\n      setError(err.message || 'Failed to fetch orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStatusChange = async (orderId, newStatus) => {\n    try {\n      // Update order in state\n      setOrders(prevOrders => prevOrders.map(order => order._id === orderId ? {\n        ...order,\n        status: newStatus\n      } : order));\n\n      // Update in localStorage - need to check all possible user order stores\n      // First check allOrders\n      try {\n        const allOrdersStr = localStorage.getItem('allOrders');\n        if (allOrdersStr) {\n          const allOrders = JSON.parse(allOrdersStr);\n          if (Array.isArray(allOrders)) {\n            const updatedAllOrders = allOrders.map(order => order._id === orderId ? {\n              ...order,\n              status: newStatus\n            } : order);\n            localStorage.setItem('allOrders', JSON.stringify(updatedAllOrders));\n          }\n        }\n      } catch (err) {\n        console.error(\"Error updating allOrders:\", err);\n      }\n\n      // Now check all user-specific order stores\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('orders_')) {\n          try {\n            const userOrdersStr = localStorage.getItem(key);\n            if (userOrdersStr) {\n              const userOrders = JSON.parse(userOrdersStr);\n              if (Array.isArray(userOrders)) {\n                // Check if this order exists in this user's orders\n                const orderExists = userOrders.some(order => order._id === orderId);\n                if (orderExists) {\n                  const updatedUserOrders = userOrders.map(order => order._id === orderId ? {\n                    ...order,\n                    status: newStatus\n                  } : order);\n                  localStorage.setItem(key, JSON.stringify(updatedUserOrders));\n                }\n              }\n            }\n          } catch (err) {\n            console.error(`Error updating orders for key ${key}:`, err);\n          }\n        }\n      }\n\n      // If selected order is open, update it too\n      if (selectedOrder && selectedOrder._id === orderId) {\n        setSelectedOrder({\n          ...selectedOrder,\n          status: newStatus\n        });\n      }\n      setSuccessMessage(`Order status updated to ${newStatus}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      setError(err.message || 'Failed to update order status');\n    }\n  };\n  const viewOrderDetails = order => {\n    setSelectedOrder(order);\n  };\n  const closeOrderDetails = () => {\n    setSelectedOrder(null);\n  };\n  const formatDate = dateString => {\n    try {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    } catch (err) {\n      return 'Invalid date';\n    }\n  };\n  const formatPrice = price => {\n    // Add null check before calling toFixed\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : '$0.00';\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleStatusFilter = e => {\n    setStatusFilter(e.target.value);\n  };\n\n  // Filter orders based on search term and status\n  const filteredOrders = orders.filter(order => {\n    // Skip invalid orders\n    if (!order || !order._id) return false;\n\n    // Apply status filter\n    if (statusFilter && order.status !== statusFilter) return false;\n\n    // Apply search filter (search by order ID, customer name, or user name)\n    if (searchTerm) {\n      var _order$shippingAddres;\n      const searchLower = searchTerm.toLowerCase();\n      const orderId = (order._id || '').toLowerCase();\n      const customerName = (((_order$shippingAddres = order.shippingAddress) === null || _order$shippingAddres === void 0 ? void 0 : _order$shippingAddres.fullName) || '').toLowerCase();\n      const userName = (order.userName || '').toLowerCase();\n      if (!orderId.includes(searchLower) && !customerName.includes(searchLower) && !userName.includes(searchLower)) {\n        return false;\n      }\n    }\n    return true;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Administrator: \", currentUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 26\n    }, this), !selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by order ID, customer name or username...\",\n          value: searchTerm,\n          onChange: handleSearch,\n          className: \"admin-search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-filter-options\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: statusFilter,\n            onChange: handleStatusFilter,\n            className: \"admin-filter-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Processing\",\n              children: \"Processing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Shipped\",\n              children: \"Shipped\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Delivered\",\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cancelled\",\n              children: \"Cancelled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), selectedOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closeOrderDetails,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Order ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 16\n          }, this), \" \", selectedOrder._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 16\n          }, this), \" \", selectedOrder.createdAt ? formatDate(selectedOrder.createdAt) : 'Unknown date']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 16\n          }, this), \" \", ((_selectedOrder$shippi = selectedOrder.shippingAddress) === null || _selectedOrder$shippi === void 0 ? void 0 : _selectedOrder$shippi.fullName) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 16\n          }, this), \" \", selectedOrder.userName || selectedOrder.userEmail || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${(selectedOrder.status || '').toLowerCase()}`,\n            children: selectedOrder.status || 'Unknown'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 16\n          }, this), \" \", formatPrice(selectedOrder.totalAmount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), selectedOrder.shippingAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipping-address\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedOrder.shippingAddress.address || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [selectedOrder.shippingAddress.city || 'N/A', \",\", selectedOrder.shippingAddress.state || 'N/A', selectedOrder.shippingAddress.zipCode || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this), selectedOrder.shippingAddress.phoneNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", selectedOrder.shippingAddress.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-products-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedOrder.items.map((item, index) => {\n            if (!item || !item.product) return null;\n            const itemPrice = typeof item.price === 'number' ? item.price : 0;\n            const itemQuantity = typeof item.quantity === 'number' ? item.quantity : 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.product.name || 'Unknown Product'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPrice(itemPrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: itemQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPrice(itemPrice * itemQuantity)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No product information available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Order Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Processing'),\n            disabled: selectedOrder.status === 'Processing',\n            children: \"Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Shipped'),\n            disabled: selectedOrder.status === 'Shipped',\n            children: \"Shipped\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Delivered'),\n            disabled: selectedOrder.status === 'Delivered',\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Cancelled'),\n            disabled: selectedOrder.status === 'Cancelled',\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"orders-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              className: \"no-orders\",\n              children: \"No orders available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this) : filteredOrders.map(order => {\n            var _order$shippingAddres2;\n            if (!order || !order._id) return null;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-id\",\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_order$shippingAddres2 = order.shippingAddress) === null || _order$shippingAddres2 === void 0 ? void 0 : _order$shippingAddres2.fullName) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.userName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdAt ? formatDate(order.createdAt) : 'Unknown date'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-total\",\n                children: formatPrice(order.totalAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${(order.status || '').toLowerCase()}`,\n                  children: order.status || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-btn\",\n                  onClick: () => viewOrderDetails(order),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 23\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageOrders, \"IcMFiqLoQi3FiDVPOa4opF2xPPQ=\");\n_c = ManageOrders;\nexport default ManageOrders;\nvar _c;\n$RefreshReg$(_c, \"ManageOrders\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","ManageOrders","_s","_selectedOrder$shippi","token","orders","setOrders","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedOrder","setSelectedOrder","currentDateTime","currentUser","searchTerm","setSearchTerm","statusFilter","setStatusFilter","fetchAllOrders","response","fetch","headers","ok","data","json","err","console","log","allOrders","allOrdersStr","localStorage","getItem","parsedOrders","JSON","parse","Array","isArray","length","i","key","startsWith","userOrdersStr","userOrders","sort","a","b","Date","createdAt","message","handleStatusChange","orderId","newStatus","prevOrders","map","order","_id","status","updatedAllOrders","setItem","stringify","orderExists","some","updatedUserOrders","setTimeout","viewOrderDetails","closeOrderDetails","formatDate","dateString","options","year","month","day","hour","minute","toLocaleDateString","undefined","formatPrice","price","toFixed","handleSearch","e","target","value","handleStatusFilter","filteredOrders","filter","_order$shippingAddres","searchLower","toLowerCase","customerName","shippingAddress","fullName","userName","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","userEmail","totalAmount","address","city","state","zipCode","phoneNumber","items","item","index","product","itemPrice","itemQuantity","quantity","name","disabled","colSpan","_order$shippingAddres2","_c","$RefreshReg$"],"sources":["C:/Users/jaswa/OneDrive/Projects/vijayalakshmi/grocery-shop-frontend/src/components/ManageOrders.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/ManageOrders.css';\r\n\r\nconst ManageOrders = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [currentDateTime] = useState('2025-03-27 05:50:54');\r\n  const [currentUser] = useState('Krizzna69');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAllOrders();\r\n  }, [token]);\r\n\r\n  const fetchAllOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Try to fetch from API first (if implemented)\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/orders/admin', {\r\n          headers: {\r\n            'x-auth-token': token\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOrders(data);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n      } catch (err) {\r\n        console.log(\"API not available, using localStorage\");\r\n      }\r\n      \r\n      // Collect all orders from all users in localStorage\r\n      let allOrders = [];\r\n      \r\n      // First try allOrders key (for backward compatibility)\r\n      try {\r\n        const allOrdersStr = localStorage.getItem('allOrders');\r\n        if (allOrdersStr) {\r\n          const parsedOrders = JSON.parse(allOrdersStr);\r\n          if (Array.isArray(parsedOrders)) {\r\n            allOrders = parsedOrders;\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error parsing allOrders:\", err);\r\n      }\r\n      \r\n      // If no orders found or we want to be thorough, scan all localStorage keys\r\n      // for user-specific order collections\r\n      if (allOrders.length === 0) {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          const key = localStorage.key(i);\r\n          if (key && key.startsWith('orders_')) {\r\n            try {\r\n              const userOrdersStr = localStorage.getItem(key);\r\n              if (userOrdersStr) {\r\n                const userOrders = JSON.parse(userOrdersStr);\r\n                if (Array.isArray(userOrders)) {\r\n                  allOrders = [...allOrders, ...userOrders];\r\n                }\r\n              }\r\n            } catch (err) {\r\n              console.error(`Error parsing orders for key ${key}:`, err);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // For a clean display, sort by date (most recent first)\r\n      allOrders.sort((a, b) => {\r\n        return new Date(b.createdAt || 0) - new Date(a.createdAt || 0);\r\n      });\r\n      \r\n      setOrders(allOrders);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to fetch orders');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      // Update order in state\r\n      setOrders(prevOrders => \r\n        prevOrders.map(order => \r\n          order._id === orderId ? { ...order, status: newStatus } : order\r\n        )\r\n      );\r\n      \r\n      // Update in localStorage - need to check all possible user order stores\r\n      // First check allOrders\r\n      try {\r\n        const allOrdersStr = localStorage.getItem('allOrders');\r\n        if (allOrdersStr) {\r\n          const allOrders = JSON.parse(allOrdersStr);\r\n          if (Array.isArray(allOrders)) {\r\n            const updatedAllOrders = allOrders.map(order => \r\n              order._id === orderId ? { ...order, status: newStatus } : order\r\n            );\r\n            localStorage.setItem('allOrders', JSON.stringify(updatedAllOrders));\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error updating allOrders:\", err);\r\n      }\r\n      \r\n      // Now check all user-specific order stores\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key && key.startsWith('orders_')) {\r\n          try {\r\n            const userOrdersStr = localStorage.getItem(key);\r\n            if (userOrdersStr) {\r\n              const userOrders = JSON.parse(userOrdersStr);\r\n              if (Array.isArray(userOrders)) {\r\n                // Check if this order exists in this user's orders\r\n                const orderExists = userOrders.some(order => order._id === orderId);\r\n                if (orderExists) {\r\n                  const updatedUserOrders = userOrders.map(order => \r\n                    order._id === orderId ? { ...order, status: newStatus } : order\r\n                  );\r\n                  localStorage.setItem(key, JSON.stringify(updatedUserOrders));\r\n                }\r\n              }\r\n            }\r\n          } catch (err) {\r\n            console.error(`Error updating orders for key ${key}:`, err);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If selected order is open, update it too\r\n      if (selectedOrder && selectedOrder._id === orderId) {\r\n        setSelectedOrder({ ...selectedOrder, status: newStatus });\r\n      }\r\n      \r\n      setSuccessMessage(`Order status updated to ${newStatus}`);\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const viewOrderDetails = (order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  const closeOrderDetails = () => {\r\n    setSelectedOrder(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n      return new Date(dateString).toLocaleDateString(undefined, options);\r\n    } catch (err) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  const formatPrice = (price) => {\r\n    // Add null check before calling toFixed\r\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : '$0.00';\r\n  };\r\n  \r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  \r\n  const handleStatusFilter = (e) => {\r\n    setStatusFilter(e.target.value);\r\n  };\r\n\r\n  // Filter orders based on search term and status\r\n  const filteredOrders = orders.filter(order => {\r\n    // Skip invalid orders\r\n    if (!order || !order._id) return false;\r\n    \r\n    // Apply status filter\r\n    if (statusFilter && order.status !== statusFilter) return false;\r\n    \r\n    // Apply search filter (search by order ID, customer name, or user name)\r\n    if (searchTerm) {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      const orderId = (order._id || '').toLowerCase();\r\n      const customerName = (order.shippingAddress?.fullName || '').toLowerCase();\r\n      const userName = (order.userName || '').toLowerCase();\r\n      \r\n      if (!orderId.includes(searchLower) && \r\n          !customerName.includes(searchLower) &&\r\n          !userName.includes(searchLower)) {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  });\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading orders...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"manage-orders-container\">\r\n      <div className=\"orders-header\">\r\n        <h2>Manage Orders</h2>\r\n        <div className=\"admin-info\">\r\n          <span>{currentDateTime}</span>\r\n          <span>Administrator: {currentUser}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      \r\n      {!selectedOrder && (\r\n        <div className=\"admin-filter-section\">\r\n          <div className=\"admin-search-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by order ID, customer name or username...\"\r\n              value={searchTerm}\r\n              onChange={handleSearch}\r\n              className=\"admin-search-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"admin-filter-options\">\r\n            <div className=\"admin-filter-group\">\r\n              <label>Status:</label>\r\n              <select \r\n                value={statusFilter} \r\n                onChange={handleStatusFilter}\r\n                className=\"admin-filter-select\"\r\n              >\r\n                <option value=\"\">All Statuses</option>\r\n                <option value=\"Processing\">Processing</option>\r\n                <option value=\"Shipped\">Shipped</option>\r\n                <option value=\"Delivered\">Delivered</option>\r\n                <option value=\"Cancelled\">Cancelled</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {selectedOrder ? (\r\n        <div className=\"order-details\">\r\n          <div className=\"order-details-header\">\r\n            <h3>Order Details</h3>\r\n            <button className=\"close-btn\" onClick={closeOrderDetails}>×</button>\r\n          </div>\r\n          \r\n          <div className=\"order-info\">\r\n            <p><strong>Order ID:</strong> {selectedOrder._id}</p>\r\n            <p><strong>Date:</strong> {selectedOrder.createdAt ? formatDate(selectedOrder.createdAt) : 'Unknown date'}</p>\r\n            <p><strong>Customer:</strong> {selectedOrder.shippingAddress?.fullName || 'N/A'}</p>\r\n            <p><strong>User Account:</strong> {selectedOrder.userName || selectedOrder.userEmail || 'N/A'}</p>\r\n            <p><strong>Status:</strong> <span className={`status-${(selectedOrder.status || '').toLowerCase()}`}>{selectedOrder.status || 'Unknown'}</span></p>\r\n            <p><strong>Total Amount:</strong> {formatPrice(selectedOrder.totalAmount)}</p>\r\n          </div>\r\n\r\n          {selectedOrder.shippingAddress && (\r\n            <div className=\"shipping-address\">\r\n              <h4>Shipping Address</h4>\r\n              <p>{selectedOrder.shippingAddress.address || 'N/A'}</p>\r\n              <p>\r\n                {selectedOrder.shippingAddress.city || 'N/A'}, \r\n                {selectedOrder.shippingAddress.state || 'N/A'} \r\n                {selectedOrder.shippingAddress.zipCode || 'N/A'}\r\n              </p>\r\n              {selectedOrder.shippingAddress.phoneNumber && (\r\n                <p>Phone: {selectedOrder.shippingAddress.phoneNumber}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <h4>Products</h4>\r\n          {Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? (\r\n            <table className=\"order-products-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Subtotal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {selectedOrder.items.map((item, index) => {\r\n                  if (!item || !item.product) return null;\r\n                  \r\n                  const itemPrice = typeof item.price === 'number' ? item.price : 0;\r\n                  const itemQuantity = typeof item.quantity === 'number' ? item.quantity : 0;\r\n                  \r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.product.name || 'Unknown Product'}</td>\r\n                      <td>{formatPrice(itemPrice)}</td>\r\n                      <td>{itemQuantity}</td>\r\n                      <td>{formatPrice(itemPrice * itemQuantity)}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No product information available</p>\r\n          )}\r\n          \r\n          <div className=\"update-status\">\r\n            <h4>Update Order Status</h4>\r\n            <div className=\"status-buttons\">\r\n              <button \r\n                className={`status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Processing')}\r\n                disabled={selectedOrder.status === 'Processing'}\r\n              >\r\n                Processing\r\n              </button>\r\n              <button \r\n                className={`status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Shipped')}\r\n                disabled={selectedOrder.status === 'Shipped'}\r\n              >\r\n                Shipped\r\n              </button>\r\n              <button \r\n                className={`status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Delivered')}\r\n                disabled={selectedOrder.status === 'Delivered'}\r\n              >\r\n                Delivered\r\n              </button>\r\n              <button \r\n                className={`status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Cancelled')}\r\n                disabled={selectedOrder.status === 'Cancelled'}\r\n              >\r\n                Cancelled\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders-table-container\">\r\n          <table className=\"orders-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Customer</th>\r\n                <th>User</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredOrders.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"no-orders\">No orders available</td>\r\n                </tr>\r\n              ) : (\r\n                filteredOrders.map(order => {\r\n                  if (!order || !order._id) return null;\r\n                  \r\n                  return (\r\n                    <tr key={order._id}>\r\n                      <td className=\"order-id\">{order._id}</td>\r\n                      <td>{order.shippingAddress?.fullName || 'N/A'}</td>\r\n                      <td>{order.userName || 'N/A'}</td>\r\n                      <td>{order.createdAt ? formatDate(order.createdAt) : 'Unknown date'}</td>\r\n                      <td className=\"order-total\">{formatPrice(order.totalAmount)}</td>\r\n                      <td className=\"order-status\">\r\n                        <span className={`status-badge ${(order.status || '').toLowerCase()}`}>\r\n                          {order.status || 'Unknown'}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"actions-cell\">\r\n                        <button \r\n                          className=\"view-btn\"\r\n                          onClick={() => viewOrderDetails(order)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}