{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaswa\\\\OneDrive\\\\Projects\\\\vijayalakshmi\\\\grocery-shop-frontend\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartTotal, setCartTotal] = useState(0);\n  const [cartCount, setCartCount] = useState(0);\n\n  // Load cart from localStorage on initial load\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        setCart(parsedCart);\n      } catch (error) {\n        console.error(\"Error parsing cart from localStorage:\", error);\n        localStorage.setItem('cart', JSON.stringify([]));\n      }\n    }\n  }, []);\n\n  // Update localStorage and calculate totals whenever cart changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    // Calculate total and count\n    const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    const count = cart.reduce((sum, item) => sum + item.quantity, 0);\n    setCartTotal(total);\n    setCartCount(count);\n  }, [cart]);\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      // Check if product is already in cart\n      const existingItemIndex = prevCart.findIndex(item => item._id === product._id);\n      if (existingItemIndex !== -1) {\n        // Create a new array with updated quantity for existing item\n        const newCart = [...prevCart];\n        newCart[existingItemIndex] = {\n          ...newCart[existingItemIndex],\n          quantity: newCart[existingItemIndex].quantity + quantity\n        };\n        return newCart;\n      } else {\n        // Add new item to cart\n        return [...prevCart, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item._id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item._id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n    localStorage.removeItem('cart');\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      cartTotal,\n      cartCount,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"YNjLP9Lru0McXF4jJZlx8Tl3+Po=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","cartTotal","setCartTotal","cartCount","setCartCount","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","setItem","stringify","total","reduce","sum","item","price","quantity","count","addToCart","product","prevCart","existingItemIndex","findIndex","_id","newCart","removeFromCart","productId","filter","updateQuantity","map","clearCart","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jaswa/OneDrive/Projects/vijayalakshmi/grocery-shop-frontend/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [cartCount, setCartCount] = useState(0);\r\n  \r\n  // Load cart from localStorage on initial load\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        setCart(parsedCart);\r\n      } catch (error) {\r\n        console.error(\"Error parsing cart from localStorage:\", error);\r\n        localStorage.setItem('cart', JSON.stringify([]));\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  // Update localStorage and calculate totals whenever cart changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n    \r\n    // Calculate total and count\r\n    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n    const count = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n    \r\n    setCartTotal(total);\r\n    setCartCount(count);\r\n  }, [cart]);\r\n  \r\n  const addToCart = (product, quantity = 1) => {\r\n    setCart(prevCart => {\r\n      // Check if product is already in cart\r\n      const existingItemIndex = prevCart.findIndex(item => item._id === product._id);\r\n      \r\n      if (existingItemIndex !== -1) {\r\n        // Create a new array with updated quantity for existing item\r\n        const newCart = [...prevCart];\r\n        newCart[existingItemIndex] = {\r\n          ...newCart[existingItemIndex],\r\n          quantity: newCart[existingItemIndex].quantity + quantity\r\n        };\r\n        return newCart;\r\n      } else {\r\n        // Add new item to cart\r\n        return [...prevCart, { ...product, quantity }];\r\n      }\r\n    });\r\n  };\r\n  \r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => prevCart.filter(item => item._id !== productId));\r\n  };\r\n  \r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCart(prevCart => \r\n      prevCart.map(item => \r\n        item._id === productId \r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n  \r\n  const clearCart = () => {\r\n    setCart([]);\r\n    localStorage.removeItem('cart');\r\n  };\r\n  \r\n  return (\r\n    <CartContext.Provider value={{\r\n      cart,\r\n      cartTotal,\r\n      cartCount,\r\n      addToCart,\r\n      removeFromCart,\r\n      updateQuantity,\r\n      clearCart\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}