{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaswa\\\\OneDrive\\\\Projects\\\\vijayalakshmi\\\\grocery-shop-frontend\\\\src\\\\components\\\\ManageOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/ManageOrders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageOrders = () => {\n  _s();\n  var _selectedOrder$shippi;\n  const {\n    token\n  } = useContext(AuthContext);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [currentDateTime] = useState('2025-03-27 08:43:20');\n  const [currentUser] = useState('Krizzna69');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('');\n  useEffect(() => {\n    // Define function inside useEffect to avoid dependency issues\n    const fetchAllOrders = async () => {\n      try {\n        setLoading(true);\n        console.log(\"Admin: Fetching all orders\");\n\n        // Collect all orders from all localStorage sources\n        let allOrders = [];\n\n        // 1. Check allOrders key first\n        try {\n          const allOrdersStr = localStorage.getItem('allOrders');\n          if (allOrdersStr) {\n            const parsedOrders = JSON.parse(allOrdersStr);\n            if (Array.isArray(parsedOrders)) {\n              allOrders = parsedOrders;\n              console.log(`Admin: Found ${allOrders.length} orders in allOrders`);\n            }\n          }\n        } catch (err) {\n          console.error(\"Admin: Error reading allOrders:\", err);\n        }\n\n        // 2. Look for user-specific order collections\n        const userSpecificOrders = [];\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          if (key && key.startsWith('orders_')) {\n            try {\n              const userOrdersStr = localStorage.getItem(key);\n              if (userOrdersStr) {\n                const userOrders = JSON.parse(userOrdersStr);\n                if (Array.isArray(userOrders)) {\n                  userSpecificOrders.push(...userOrders);\n                  console.log(`Admin: Found ${userOrders.length} orders in ${key}`);\n                }\n              }\n            } catch (err) {\n              console.error(`Admin: Error reading ${key}:`, err);\n            }\n          }\n        }\n\n        // 3. Check lastOrder as final fallback\n        if (allOrders.length === 0 && userSpecificOrders.length === 0) {\n          try {\n            const lastOrderStr = localStorage.getItem('lastOrder');\n            if (lastOrderStr) {\n              const lastOrder = JSON.parse(lastOrderStr);\n              if (lastOrder && lastOrder._id) {\n                allOrders = [lastOrder];\n                console.log(\"Admin: Found order in lastOrder\");\n              }\n            }\n          } catch (err) {\n            console.error(\"Admin: Error reading lastOrder:\", err);\n          }\n        } else if (userSpecificOrders.length > 0) {\n          // Combine all orders, avoiding duplicates by order ID\n          const orderMap = new Map();\n\n          // Add allOrders first\n          allOrders.forEach(order => {\n            if (order && order._id) {\n              orderMap.set(order._id, order);\n            }\n          });\n\n          // Then add user-specific orders (may override allOrders)\n          userSpecificOrders.forEach(order => {\n            if (order && order._id) {\n              orderMap.set(order._id, order);\n            }\n          });\n\n          // Convert back to array\n          allOrders = Array.from(orderMap.values());\n        }\n\n        // Sort by date (most recent first)\n        allOrders.sort((a, b) => {\n          return new Date(b.createdAt || 0) - new Date(a.createdAt || 0);\n        });\n        console.log(`Admin: Setting ${allOrders.length} orders in state`);\n        console.log(\"First order sample:\", allOrders.length > 0 ? JSON.stringify(allOrders[0]).substring(0, 100) : \"No orders\");\n        setOrders(allOrders);\n      } catch (err) {\n        setError(\"Failed to fetch orders: \" + (err.message || \"Unknown error\"));\n        console.error(\"Admin error:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllOrders();\n  }, [token]);\n  const handleStatusChange = async (orderId, newStatus) => {\n    try {\n      // Update order in state\n      setOrders(prevOrders => prevOrders.map(order => order._id === orderId ? {\n        ...order,\n        status: newStatus\n      } : order));\n\n      // Update in localStorage - need to check all possible user order stores\n      // First check allOrders\n      try {\n        const allOrdersStr = localStorage.getItem('allOrders');\n        if (allOrdersStr) {\n          const allOrders = JSON.parse(allOrdersStr);\n          if (Array.isArray(allOrders)) {\n            const updatedAllOrders = allOrders.map(order => order._id === orderId ? {\n              ...order,\n              status: newStatus\n            } : order);\n            localStorage.setItem('allOrders', JSON.stringify(updatedAllOrders));\n          }\n        }\n      } catch (err) {\n        console.error(\"Error updating allOrders:\", err);\n      }\n\n      // Now check all user-specific order stores\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('orders_')) {\n          try {\n            const userOrdersStr = localStorage.getItem(key);\n            if (userOrdersStr) {\n              const userOrders = JSON.parse(userOrdersStr);\n              if (Array.isArray(userOrders)) {\n                // Check if this order exists in this user's orders\n                const orderExists = userOrders.some(order => order._id === orderId);\n                if (orderExists) {\n                  const updatedUserOrders = userOrders.map(order => order._id === orderId ? {\n                    ...order,\n                    status: newStatus\n                  } : order);\n                  localStorage.setItem(key, JSON.stringify(updatedUserOrders));\n                }\n              }\n            }\n          } catch (err) {\n            console.error(`Error updating orders for key ${key}:`, err);\n          }\n        }\n      }\n\n      // If selected order is open, update it too\n      if (selectedOrder && selectedOrder._id === orderId) {\n        setSelectedOrder({\n          ...selectedOrder,\n          status: newStatus\n        });\n      }\n      setSuccessMessage(`Order status updated to ${newStatus}`);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n    } catch (err) {\n      setError(err.message || 'Failed to update order status');\n    }\n  };\n  const viewOrderDetails = order => {\n    setSelectedOrder(order);\n  };\n  const closeOrderDetails = () => {\n    setSelectedOrder(null);\n  };\n  const formatDate = dateString => {\n    try {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    } catch (err) {\n      return 'Invalid date';\n    }\n  };\n  const formatPrice = price => {\n    // Add null check before calling toFixed\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : '$0.00';\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleStatusFilter = e => {\n    setStatusFilter(e.target.value);\n  };\n\n  // Filter orders based on search term and status\n  const filteredOrders = orders.filter(order => {\n    // Skip invalid orders\n    if (!order || !order._id) return false;\n\n    // Apply status filter\n    if (statusFilter && order.status !== statusFilter) return false;\n\n    // Apply search filter (search by order ID, customer name, or user name)\n    if (searchTerm) {\n      var _order$shippingAddres;\n      const searchLower = searchTerm.toLowerCase();\n      const orderId = (order._id || '').toLowerCase();\n      const customerName = (((_order$shippingAddres = order.shippingAddress) === null || _order$shippingAddres === void 0 ? void 0 : _order$shippingAddres.fullName) || '').toLowerCase();\n      const userName = (order.userName || '').toLowerCase();\n      if (!orderId.includes(searchLower) && !customerName.includes(searchLower) && !userName.includes(searchLower)) {\n        return false;\n      }\n    }\n    return true;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(\"Rendering ManageOrders with\", orders.length, \"total orders and\", filteredOrders.length, \"filtered orders\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-orders-container\",\n    style: {\n      display: 'block',\n      visibility: 'visible'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentDateTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Administrator: \", currentUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 26\n    }, this), !selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by order ID, customer name or username...\",\n          value: searchTerm,\n          onChange: handleSearch,\n          className: \"admin-search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-filter-options\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: statusFilter,\n            onChange: handleStatusFilter,\n            className: \"admin-filter-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Processing\",\n              children: \"Processing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Shipped\",\n              children: \"Shipped\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Delivered\",\n              children: \"Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Cancelled\",\n              children: \"Cancelled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), selectedOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Order Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: closeOrderDetails,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Order ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 16\n          }, this), \" \", selectedOrder._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 16\n          }, this), \" \", selectedOrder.createdAt ? formatDate(selectedOrder.createdAt) : 'Unknown date']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Customer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 16\n          }, this), \" \", ((_selectedOrder$shippi = selectedOrder.shippingAddress) === null || _selectedOrder$shippi === void 0 ? void 0 : _selectedOrder$shippi.fullName) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 16\n          }, this), \" \", selectedOrder.userName || selectedOrder.userEmail || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-${(selectedOrder.status || '').toLowerCase()}`,\n            children: selectedOrder.status || 'Unknown'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 16\n          }, this), \" \", formatPrice(selectedOrder.totalAmount)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), selectedOrder.shippingAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipping-address\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedOrder.shippingAddress.address || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [selectedOrder.shippingAddress.city || 'N/A', \",\", selectedOrder.shippingAddress.state || 'N/A', selectedOrder.shippingAddress.zipCode || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), selectedOrder.shippingAddress.phoneNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", selectedOrder.shippingAddress.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-products-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtotal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedOrder.items.map((item, index) => {\n            if (!item || !item.product) return null;\n            const itemPrice = typeof item.price === 'number' ? item.price : 0;\n            const itemQuantity = typeof item.quantity === 'number' ? item.quantity : 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.product.name || 'Unknown Product'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPrice(itemPrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: itemQuantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPrice(itemPrice * itemQuantity)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No product information available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Update Order Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Processing'),\n            disabled: selectedOrder.status === 'Processing',\n            children: \"Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Shipped'),\n            disabled: selectedOrder.status === 'Shipped',\n            children: \"Shipped\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Delivered'),\n            disabled: selectedOrder.status === 'Delivered',\n            children: \"Delivered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`,\n            onClick: () => handleStatusChange(selectedOrder._id, 'Cancelled'),\n            disabled: selectedOrder.status === 'Cancelled',\n            children: \"Cancelled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-table-container\",\n      style: {\n        display: 'block',\n        visibility: 'visible'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"orders-table\",\n        style: {\n          display: 'table',\n          visibility: 'visible'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              className: \"no-orders\",\n              children: \"No orders available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this) : filteredOrders.map(order => {\n            var _order$shippingAddres2;\n            if (!order || !order._id) return null;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                display: 'table-row',\n                visibility: 'visible'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-id\",\n                children: order._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_order$shippingAddres2 = order.shippingAddress) === null || _order$shippingAddres2 === void 0 ? void 0 : _order$shippingAddres2.fullName) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.userName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: order.createdAt ? formatDate(order.createdAt) : 'Unknown date'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-total\",\n                children: formatPrice(order.totalAmount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"order-status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${(order.status || '').toLowerCase()}`,\n                  children: order.status || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view-btn\",\n                  onClick: () => viewOrderDetails(order),\n                  children: \"View Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 23\n              }, this)]\n            }, order._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageOrders, \"aY/xLTMf7Z8LMrFEF6YA5LQTAf4=\");\n_c = ManageOrders;\nexport default ManageOrders;\nvar _c;\n$RefreshReg$(_c, \"ManageOrders\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","ManageOrders","_s","_selectedOrder$shippi","token","orders","setOrders","loading","setLoading","error","setError","successMessage","setSuccessMessage","selectedOrder","setSelectedOrder","currentDateTime","currentUser","searchTerm","setSearchTerm","statusFilter","setStatusFilter","fetchAllOrders","console","log","allOrders","allOrdersStr","localStorage","getItem","parsedOrders","JSON","parse","Array","isArray","length","err","userSpecificOrders","i","key","startsWith","userOrdersStr","userOrders","push","lastOrderStr","lastOrder","_id","orderMap","Map","forEach","order","set","from","values","sort","a","b","Date","createdAt","stringify","substring","message","handleStatusChange","orderId","newStatus","prevOrders","map","status","updatedAllOrders","setItem","orderExists","some","updatedUserOrders","setTimeout","viewOrderDetails","closeOrderDetails","formatDate","dateString","options","year","month","day","hour","minute","toLocaleDateString","undefined","formatPrice","price","toFixed","handleSearch","e","target","value","handleStatusFilter","filteredOrders","filter","_order$shippingAddres","searchLower","toLowerCase","customerName","shippingAddress","fullName","userName","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","visibility","type","placeholder","onChange","onClick","userEmail","totalAmount","address","city","state","zipCode","phoneNumber","items","item","index","product","itemPrice","itemQuantity","quantity","name","disabled","colSpan","_order$shippingAddres2","_c","$RefreshReg$"],"sources":["C:/Users/jaswa/OneDrive/Projects/vijayalakshmi/grocery-shop-frontend/src/components/ManageOrders.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../styles/ManageOrders.css';\r\n\r\nconst ManageOrders = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [currentDateTime] = useState('2025-03-27 08:43:20');\r\n  const [currentUser] = useState('Krizzna69');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Define function inside useEffect to avoid dependency issues\r\n    const fetchAllOrders = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log(\"Admin: Fetching all orders\");\r\n        \r\n        // Collect all orders from all localStorage sources\r\n        let allOrders = [];\r\n        \r\n        // 1. Check allOrders key first\r\n        try {\r\n          const allOrdersStr = localStorage.getItem('allOrders');\r\n          if (allOrdersStr) {\r\n            const parsedOrders = JSON.parse(allOrdersStr);\r\n            if (Array.isArray(parsedOrders)) {\r\n              allOrders = parsedOrders;\r\n              console.log(`Admin: Found ${allOrders.length} orders in allOrders`);\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Admin: Error reading allOrders:\", err);\r\n        }\r\n        \r\n        // 2. Look for user-specific order collections\r\n        const userSpecificOrders = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          const key = localStorage.key(i);\r\n          if (key && key.startsWith('orders_')) {\r\n            try {\r\n              const userOrdersStr = localStorage.getItem(key);\r\n              if (userOrdersStr) {\r\n                const userOrders = JSON.parse(userOrdersStr);\r\n                if (Array.isArray(userOrders)) {\r\n                  userSpecificOrders.push(...userOrders);\r\n                  console.log(`Admin: Found ${userOrders.length} orders in ${key}`);\r\n                }\r\n              }\r\n            } catch (err) {\r\n              console.error(`Admin: Error reading ${key}:`, err);\r\n            }\r\n          }\r\n        }\r\n        \r\n        // 3. Check lastOrder as final fallback\r\n        if (allOrders.length === 0 && userSpecificOrders.length === 0) {\r\n          try {\r\n            const lastOrderStr = localStorage.getItem('lastOrder');\r\n            if (lastOrderStr) {\r\n              const lastOrder = JSON.parse(lastOrderStr);\r\n              if (lastOrder && lastOrder._id) {\r\n                allOrders = [lastOrder];\r\n                console.log(\"Admin: Found order in lastOrder\");\r\n              }\r\n            }\r\n          } catch (err) {\r\n            console.error(\"Admin: Error reading lastOrder:\", err);\r\n          }\r\n        } else if (userSpecificOrders.length > 0) {\r\n          // Combine all orders, avoiding duplicates by order ID\r\n          const orderMap = new Map();\r\n          \r\n          // Add allOrders first\r\n          allOrders.forEach(order => {\r\n            if (order && order._id) {\r\n              orderMap.set(order._id, order);\r\n            }\r\n          });\r\n          \r\n          // Then add user-specific orders (may override allOrders)\r\n          userSpecificOrders.forEach(order => {\r\n            if (order && order._id) {\r\n              orderMap.set(order._id, order);\r\n            }\r\n          });\r\n          \r\n          // Convert back to array\r\n          allOrders = Array.from(orderMap.values());\r\n        }\r\n        \r\n        // Sort by date (most recent first)\r\n        allOrders.sort((a, b) => {\r\n          return new Date(b.createdAt || 0) - new Date(a.createdAt || 0);\r\n        });\r\n        \r\n        console.log(`Admin: Setting ${allOrders.length} orders in state`);\r\n        console.log(\"First order sample:\", allOrders.length > 0 ? JSON.stringify(allOrders[0]).substring(0, 100) : \"No orders\");\r\n        setOrders(allOrders);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch orders: \" + (err.message || \"Unknown error\"));\r\n        console.error(\"Admin error:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchAllOrders();\r\n  }, [token]);\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    try {\r\n      // Update order in state\r\n      setOrders(prevOrders => \r\n        prevOrders.map(order => \r\n          order._id === orderId ? { ...order, status: newStatus } : order\r\n        )\r\n      );\r\n      \r\n      // Update in localStorage - need to check all possible user order stores\r\n      // First check allOrders\r\n      try {\r\n        const allOrdersStr = localStorage.getItem('allOrders');\r\n        if (allOrdersStr) {\r\n          const allOrders = JSON.parse(allOrdersStr);\r\n          if (Array.isArray(allOrders)) {\r\n            const updatedAllOrders = allOrders.map(order => \r\n              order._id === orderId ? { ...order, status: newStatus } : order\r\n            );\r\n            localStorage.setItem('allOrders', JSON.stringify(updatedAllOrders));\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error updating allOrders:\", err);\r\n      }\r\n      \r\n      // Now check all user-specific order stores\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key && key.startsWith('orders_')) {\r\n          try {\r\n            const userOrdersStr = localStorage.getItem(key);\r\n            if (userOrdersStr) {\r\n              const userOrders = JSON.parse(userOrdersStr);\r\n              if (Array.isArray(userOrders)) {\r\n                // Check if this order exists in this user's orders\r\n                const orderExists = userOrders.some(order => order._id === orderId);\r\n                if (orderExists) {\r\n                  const updatedUserOrders = userOrders.map(order => \r\n                    order._id === orderId ? { ...order, status: newStatus } : order\r\n                  );\r\n                  localStorage.setItem(key, JSON.stringify(updatedUserOrders));\r\n                }\r\n              }\r\n            }\r\n          } catch (err) {\r\n            console.error(`Error updating orders for key ${key}:`, err);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If selected order is open, update it too\r\n      if (selectedOrder && selectedOrder._id === orderId) {\r\n        setSelectedOrder({ ...selectedOrder, status: newStatus });\r\n      }\r\n      \r\n      setSuccessMessage(`Order status updated to ${newStatus}`);\r\n      \r\n      // Clear success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to update order status');\r\n    }\r\n  };\r\n\r\n  const viewOrderDetails = (order) => {\r\n    setSelectedOrder(order);\r\n  };\r\n\r\n  const closeOrderDetails = () => {\r\n    setSelectedOrder(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n      return new Date(dateString).toLocaleDateString(undefined, options);\r\n    } catch (err) {\r\n      return 'Invalid date';\r\n    }\r\n  };\r\n  \r\n  const formatPrice = (price) => {\r\n    // Add null check before calling toFixed\r\n    return typeof price === 'number' ? `$${price.toFixed(2)}` : '$0.00';\r\n  };\r\n  \r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  \r\n  const handleStatusFilter = (e) => {\r\n    setStatusFilter(e.target.value);\r\n  };\r\n\r\n  // Filter orders based on search term and status\r\n  const filteredOrders = orders.filter(order => {\r\n    // Skip invalid orders\r\n    if (!order || !order._id) return false;\r\n    \r\n    // Apply status filter\r\n    if (statusFilter && order.status !== statusFilter) return false;\r\n    \r\n    // Apply search filter (search by order ID, customer name, or user name)\r\n    if (searchTerm) {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      const orderId = (order._id || '').toLowerCase();\r\n      const customerName = (order.shippingAddress?.fullName || '').toLowerCase();\r\n      const userName = (order.userName || '').toLowerCase();\r\n      \r\n      if (!orderId.includes(searchLower) && \r\n          !customerName.includes(searchLower) &&\r\n          !userName.includes(searchLower)) {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  });\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading orders...</div>;\r\n  }\r\n\r\n  console.log(\"Rendering ManageOrders with\", orders.length, \"total orders and\", filteredOrders.length, \"filtered orders\");\r\n\r\n  return (\r\n    <div className=\"manage-orders-container\" style={{display: 'block', visibility: 'visible'}}>\r\n      <div className=\"orders-header\">\r\n        <h2>Manage Orders</h2>\r\n        <div className=\"admin-info\">\r\n          <span>{currentDateTime}</span>\r\n          <span>Administrator: {currentUser}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n      \r\n      {!selectedOrder && (\r\n        <div className=\"admin-filter-section\">\r\n          <div className=\"admin-search-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by order ID, customer name or username...\"\r\n              value={searchTerm}\r\n              onChange={handleSearch}\r\n              className=\"admin-search-input\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"admin-filter-options\">\r\n            <div className=\"admin-filter-group\">\r\n              <label>Status:</label>\r\n              <select \r\n                value={statusFilter} \r\n                onChange={handleStatusFilter}\r\n                className=\"admin-filter-select\"\r\n              >\r\n                <option value=\"\">All Statuses</option>\r\n                <option value=\"Processing\">Processing</option>\r\n                <option value=\"Shipped\">Shipped</option>\r\n                <option value=\"Delivered\">Delivered</option>\r\n                <option value=\"Cancelled\">Cancelled</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {selectedOrder ? (\r\n        <div className=\"order-details\">\r\n          <div className=\"order-details-header\">\r\n            <h3>Order Details</h3>\r\n            <button className=\"close-btn\" onClick={closeOrderDetails}>×</button>\r\n          </div>\r\n          \r\n          <div className=\"order-info\">\r\n            <p><strong>Order ID:</strong> {selectedOrder._id}</p>\r\n            <p><strong>Date:</strong> {selectedOrder.createdAt ? formatDate(selectedOrder.createdAt) : 'Unknown date'}</p>\r\n            <p><strong>Customer:</strong> {selectedOrder.shippingAddress?.fullName || 'N/A'}</p>\r\n            <p><strong>User Account:</strong> {selectedOrder.userName || selectedOrder.userEmail || 'N/A'}</p>\r\n            <p><strong>Status:</strong> <span className={`status-${(selectedOrder.status || '').toLowerCase()}`}>{selectedOrder.status || 'Unknown'}</span></p>\r\n            <p><strong>Total Amount:</strong> {formatPrice(selectedOrder.totalAmount)}</p>\r\n          </div>\r\n\r\n          {selectedOrder.shippingAddress && (\r\n            <div className=\"shipping-address\">\r\n              <h4>Shipping Address</h4>\r\n              <p>{selectedOrder.shippingAddress.address || 'N/A'}</p>\r\n              <p>\r\n                {selectedOrder.shippingAddress.city || 'N/A'}, \r\n                {selectedOrder.shippingAddress.state || 'N/A'} \r\n                {selectedOrder.shippingAddress.zipCode || 'N/A'}\r\n              </p>\r\n              {selectedOrder.shippingAddress.phoneNumber && (\r\n                <p>Phone: {selectedOrder.shippingAddress.phoneNumber}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <h4>Products</h4>\r\n          {Array.isArray(selectedOrder.items) && selectedOrder.items.length > 0 ? (\r\n            <table className=\"order-products-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Price</th>\r\n                  <th>Quantity</th>\r\n                  <th>Subtotal</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {selectedOrder.items.map((item, index) => {\r\n                  if (!item || !item.product) return null;\r\n                  \r\n                  const itemPrice = typeof item.price === 'number' ? item.price : 0;\r\n                  const itemQuantity = typeof item.quantity === 'number' ? item.quantity : 0;\r\n                  \r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{item.product.name || 'Unknown Product'}</td>\r\n                      <td>{formatPrice(itemPrice)}</td>\r\n                      <td>{itemQuantity}</td>\r\n                      <td>{formatPrice(itemPrice * itemQuantity)}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>No product information available</p>\r\n          )}\r\n          \r\n          <div className=\"update-status\">\r\n            <h4>Update Order Status</h4>\r\n            <div className=\"status-buttons\">\r\n              <button \r\n                className={`status-btn processing ${selectedOrder.status === 'Processing' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Processing')}\r\n                disabled={selectedOrder.status === 'Processing'}\r\n              >\r\n                Processing\r\n              </button>\r\n              <button \r\n                className={`status-btn shipped ${selectedOrder.status === 'Shipped' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Shipped')}\r\n                disabled={selectedOrder.status === 'Shipped'}\r\n              >\r\n                Shipped\r\n              </button>\r\n              <button \r\n                className={`status-btn delivered ${selectedOrder.status === 'Delivered' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Delivered')}\r\n                disabled={selectedOrder.status === 'Delivered'}\r\n              >\r\n                Delivered\r\n              </button>\r\n              <button \r\n                className={`status-btn cancelled ${selectedOrder.status === 'Cancelled' ? 'active' : ''}`}\r\n                onClick={() => handleStatusChange(selectedOrder._id, 'Cancelled')}\r\n                disabled={selectedOrder.status === 'Cancelled'}\r\n              >\r\n                Cancelled\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders-table-container\" style={{display: 'block', visibility: 'visible'}}>\r\n          <table className=\"orders-table\" style={{display: 'table', visibility: 'visible'}}>\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Customer</th>\r\n                <th>User</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredOrders.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"no-orders\">No orders available</td>\r\n                </tr>\r\n              ) : (\r\n                filteredOrders.map(order => {\r\n                  if (!order || !order._id) return null;\r\n                  \r\n                  return (\r\n                    <tr key={order._id} style={{display: 'table-row', visibility: 'visible'}}>\r\n                      <td className=\"order-id\">{order._id}</td>\r\n                      <td>{order.shippingAddress?.fullName || 'N/A'}</td>\r\n                      <td>{order.userName || 'N/A'}</td>\r\n                      <td>{order.createdAt ? formatDate(order.createdAt) : 'Unknown date'}</td>\r\n                      <td className=\"order-total\">{formatPrice(order.totalAmount)}</td>\r\n                      <td className=\"order-status\">\r\n                        <span className={`status-badge ${(order.status || '').toLowerCase()}`}>\r\n                          {order.status || 'Unknown'}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"actions-cell\">\r\n                        <button \r\n                          className=\"view-btn\"\r\n                          onClick={() => viewOrderDetails(order)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}